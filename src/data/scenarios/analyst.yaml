id: analyst
title: Data Analysis
description: How do you explore, clean, and summarize a large dataset quickly and accurately?
icon: ðŸ“Š
story: >
  You've just received the city's public employee payroll data for the recently concluded fiscal year. It's a massive 
  file, and your editor wants to know if there are any stories hidden within it â€” excessive overtime, strange job 
  titles, major pay disparities â€” before committing to a full investigation. Your time is limited, and you need to 
  conduct a quick but effective initial analysis.

decisions:
  - id: start
    text: >
      Before you can analyze the data, you need to understand its structure. What are the column names? What kind 
      of data does each column hold? Are there lots of missing values? How do you get this basic profile?
    choices:
      - text: >
          Attempt to open the 200MB CSV file in a standard spreadsheet program like Microsoft Excel or Google 
          Sheets. Manually scroll through the data to inspect the columns and try to use built-in tools to get 
          a summary.
        next: inspect_brute_force
      - text: >
          Use a dedicated tool like OpenRefine or csvkit to get an immediate summary of the data.
        next: inspect_tiny_tool
      - text: >
          Use a local LLM to generate code that profiles the dataset using DuckDB.
        next: inspect_llm

  - id: inspect_brute_force
    text: >
      You've inspected the dataset manually. Now you need to run your list of queries to get concrete answers.
    choices:
      - text: >
          Manually write filters or SQL queries to answer each question one by one, exporting results as 
          separate CSVs.
        next: query_manual
      - text: >
          Use a local LLM to generate all your queries at once and export them in a batch.
        next: query_llm
      - text: >
          Upload the dataset and queries to a cloud AI service and ask it to find the answers.
        next: query_cloud

  - id: inspect_tiny_tool
    text: >
      You've used a lightweight tool to inspect your data. Now you need to run your list of queries to get 
      concrete answers.
    choices:
      - text: >
          Manually write filters or SQL queries to answer each question one by one, exporting results as 
          separate CSVs.
        next: query_manual
      - text: >
          Use a local LLM to generate all your queries at once and export them in a batch.
        next: query_llm
      - text: >
          Upload the dataset and queries to a cloud AI service and ask it to find the answers.
        next: query_cloud

  - id: inspect_llm
    text: >
      You've used a local LLM to understand the dataset. Now you need to run your list of queries to get 
      concrete answers.
    choices:
      - text: >
          Manually write filters or SQL queries to answer each question one by one, exporting results as 
          separate CSVs.
        next: query_manual
      - text: >
          Use a local LLM to generate all your queries at once and export them in a batch.
        next: query_llm
      - text: >
          Upload the dataset and queries to a cloud AI service and ask it to find the answers.
        next: query_cloud

  - id: query_manual
    text: >
      You now have a folder full of result CSVs from manually executed queries. Time to summarize the findings 
      for your editor.
    choices:
      - text: >
          Open each result file, interpret findings, and write a summary memo from scratch using your judgment.
        next: summarize_manual
      - text: >
          Write a script that uses a local LLM to summarize each result into a sentence. Combine these into a memo.
        next: summarize_llm
      - text: >
          Ask a cloud AI service to write a memo summarizing the results and suggest headlines.
        next: summarize_cloud

  - id: query_llm
    text: >
      You now have a folder full of result CSVs from LLM-generated queries. Time to summarize the findings 
      for your editor.
    choices:
      - text: >
          Open each result file, interpret findings, and write a summary memo from scratch using your judgment.
        next: summarize_manual
      - text: >
          Write a script that uses a local LLM to summarize each result into a sentence. Combine these into a memo.
        next: summarize_llm
      - text: >
          Ask a cloud AI service to write a memo summarizing the results and suggest headlines.
        next: summarize_cloud

  - id: query_cloud
    text: >
      You now have a folder full of result CSVs from a cloud AI service. Time to summarize the findings 
      for your editor.
    choices:
      - text: >
          Open each result file, interpret findings, and write a summary memo from scratch using your judgment.
        next: summarize_manual
      - text: >
          Write a script that uses a local LLM to summarize each result into a sentence. Combine these into a memo.
        next: summarize_llm
      - text: >
          Ask a cloud AI service to write a memo summarizing the results and suggest headlines.
        next: summarize_cloud

  - id: summarize_manual
    text: >
      You wrote the memo yourself, using your own judgment and interpretation. Your editor now has a clear 
      summary and is ready to decide on next steps.
    choices:
      - text: Finish the adventure.
        next: end

  - id: summarize_llm
    text: >
      You used a local LLM to generate short summaries of each finding, and stitched them into a readable memo. 
      Your editor is impressed with the clarity and speed.
    choices:
      - text: Finish the adventure.
        next: end

  - id: summarize_cloud
    text: >
      A cloud AI service generated a well-written memo with potential headlines. Your editor now has everything 
      needed to greenlight deeper reporting.
    choices:
      - text: Finish the adventure.
        next: end

  - id: end
    text: >
      You've completed your initial analysis and delivered a clear, concise memo to your editor. You've uncovered 
      leads worth pursuing â€” mission accomplished!
